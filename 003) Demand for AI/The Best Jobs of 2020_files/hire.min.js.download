function appendParamsOnce(url, params) { var isPostJob = false; if (url.indexOf("/p") > -1 || url.indexOf("/s") > -1) { isPostJob = true; var ctk = readCookie("CTK"); if (ctk) { params += "&trafficTk=" + ctk; } } var useParams = params.replace(/^(\?|\&)/, "").split("&"); var anchorRegExp = new RegExp(/#.*$/); var urlAnchorMatch = url.match(anchorRegExp); var isSamePage = url.lastIndexOf(window.location.href, 0) === 0; var hasParams = url.indexOf("?") > 0; var hasAnchor = urlAnchorMatch != null; var isOnlyAnchor = isSamePage && !hasParams && hasAnchor; if (!isOnlyAnchor) { var anchor = urlAnchorMatch == null ? "" : urlAnchorMatch; url = url.replace(anchorRegExp, ""); for (var i = 0; i < useParams.length; i++) { if (url.match(new RegExp("[\\?|\\&]" + useParams[i])) == null) { url += (url.indexOf("?") > 0 ? "&" : "?") + useParams[i]; } } url += anchor; } if (isPostJob) { if (url.indexOf("jstm=") == -1) { url += (url.indexOf("?") > 0 ? "&" : "?") + "jstm=0"; } url = url.replace(/jstm=\d+/, "jstm=" + new Date().getTime()); } return url; } function getOptimizelyGroups() { if ( window["optimizely"] && window["optimizely"]["get"] && window["optimizely"]["get"]("state") && window["optimizely"]["get"]("state")["getVariationMap"]() ) { var optimizelyExperimentIds = []; var optimizelyVariationNames = []; var variationMap = window["optimizely"]["get"]("state")["getVariationMap"](); for (k in variationMap) { optimizelyExperimentIds.push(variationMap[k]["id"]); optimizelyVariationNames.push(variationMap[k]["name"]); } return { experimentIds: optimizelyExperimentIds.join(","), variationNames: optimizelyVariationNames.join(","), }; } else { return null; } } function logLoad(baseUrl, tk) { var optimizelyGroups = getOptimizelyGroups(); if (tk && document.images) { var logUrl = baseUrl + "?a=thJsv&tk=" + tk; if (optimizelyGroups) { logUrl += "&optExpIds=" + encodeURIComponent(optimizelyGroups["experimentIds"]); logUrl += "&optVarNames=" + encodeURIComponent(optimizelyGroups["variationNames"]); } new Image().src = logUrl; } } window.onload = function() { try { logLoad(window.rpcLogUrl, window.tk); } catch (e) { console.error("logLoad failed to execute"); } }; function hideAlertAndSetEUCookie() { document.cookie = "hideCookieAlert=1; expires=Tues, 31 Dec 2030 23:59:59 UTC; path=/"; var legalFooter = document.getElementById("legalFooter"); legalFooter.parentNode.removeChild(legalFooter); return true; } function readCookie(name) { var nameEq = name + "="; var cookies = document.cookie.split(";"); for (var i = 0; i < cookies.length; i++) { var cookie = cookies[i]; while (cookie.charAt(0) === " ") { cookie = cookie.substring(1, cookie.length); } if (cookie.indexOf(nameEq) === 0) { return cookie.substring(nameEq.length, cookie.length); } } return null; }